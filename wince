#!/bin/sh -x

clear
rustup update

# this is the directory that contains the source code
rustfmt --config max_width=2500 /mnt/c/temp/wink/src/*.rs

if [ $? -ne 0 ]; then
    echo rustfmt failed
    exit 2
else
    # this is the directory that contains cargo.toml
    cd /mnt/c/temp/wink
    for f in **/*.rs; do ls -l "$f" ; wc -l "$f" ; echo "" ; done
    cargo update 
    cargo-clippy 2>&1 | egrep -iq warning

    if [ $? -eq 0 ]; then
        cargo-clippy 
        echo cargo-clippy failed
        exit 3
    else
#        cargo clean --target-dir /tmp/wink.build
 #       cargo check --target-dir /tmp/wink.build
        cargo doc --target-dir /tmp/wink.build
        cargo build --target-dir /tmp/wink.build --release # affects binary path below 

        if [ $? -ne 0 ]; then
            echo cargo build failed
            exit 4
        else
            ls -l /tmp/wink.build/release/wink # show file size and build date
#            /tmp/wink.build/release/wink exp /tmp/wink.build/doc/wink/index.html # open documentation
            lsof /tmp/wink.build/release/wink
            lsof ~/bin/wink
            rm ~/bin/wink
            cp /tmp/wink.build/release/wink ~/bin # install new binary for Linux
            cargo.exe build --release --target-dir "C:\\temp\\wink.build" # affects binary path below 
            /mnt/c/temp/wink.build/release/wink.exe -ep > /tmp/wink.build/doc/wink/wink.json # export JSON to docs
            cp /tmp/wink.build/doc/wink/wink.json . # copy JSON to git
            ~/bin/wink $@ # run Linux build with parameters supplied on command line
        fi
    fi
fi

cp /mnt/c/temp/wink/wince ~/bin # instll this wince shell script
cd - > /dev/null # revert to the previous directory
exit 0